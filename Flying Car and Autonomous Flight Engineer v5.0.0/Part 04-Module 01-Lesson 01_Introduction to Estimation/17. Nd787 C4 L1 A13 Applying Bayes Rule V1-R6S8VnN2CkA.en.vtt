WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.600
So, how can we use Bayes' rule? Let's take a look.

00:00:03.600 --> 00:00:07.589
For example, imagine that we don't know where our vehicle is,

00:00:07.589 --> 00:00:10.394
but we have some knowledge about roughly where it is.

00:00:10.394 --> 00:00:13.320
We'll call this a prior, maybe it's a Gaussian.

00:00:13.320 --> 00:00:17.600
We know the vehicle position is distributed with some mean and some variance.

00:00:17.600 --> 00:00:21.845
That variance can capture how well we think we know where the vehicle is.

00:00:21.844 --> 00:00:26.689
Imagine that the position of our flying car is measured with GPS,

00:00:26.690 --> 00:00:30.020
but the GPS is corrupted by guessing errors or noise.

00:00:30.019 --> 00:00:34.159
We'll say that the measurement y equals x plus v,

00:00:34.159 --> 00:00:36.529
where x is the true position of the vehicle,

00:00:36.530 --> 00:00:38.990
v is the air added during measurement,

00:00:38.990 --> 00:00:41.660
and y is the received measured value.

00:00:41.659 --> 00:00:45.634
We can assume that the position is independent of the measurement noise,

00:00:45.634 --> 00:00:48.799
which means x is independent of v. Can we

00:00:48.799 --> 00:00:52.114
compute the distribution over the position given the measurement?

00:00:52.115 --> 00:00:54.950
That is, can we find p of x given y?

00:00:54.950 --> 00:00:59.705
Well, we can show from the chain rule the y is going to take this form,

00:00:59.704 --> 00:01:02.045
and y given x is going to take that form,

00:01:02.045 --> 00:01:05.239
but we don't want p of y or p of y given x,

00:01:05.239 --> 00:01:07.024
we want to know p of x given y.

00:01:07.025 --> 00:01:09.245
We can use Bayes rule to find it.

00:01:09.245 --> 00:01:11.030
P of x given y,

00:01:11.030 --> 00:01:16.250
is going to be equal to p of y given x times p of x divided by p of y,

00:01:16.250 --> 00:01:21.200
and if I plug in normal distributions into this equation, I'm left with this.

00:01:21.200 --> 00:01:24.439
This is the product of two normal distributions,

00:01:24.439 --> 00:01:26.629
divided by a third normal distribution,

00:01:26.629 --> 00:01:28.209
and with some algebra,

00:01:28.209 --> 00:01:32.054
we can show that the product and division actually results in another Gaussian.

00:01:32.055 --> 00:01:37.830
In fact, whenever we multiply a normal distribution by a different normal distribution,

00:01:37.829 --> 00:01:40.379
the result is also a normal distribution.

00:01:40.379 --> 00:01:43.185
In this case, the resulting normal distribution

00:01:43.185 --> 00:01:46.064
has a new mean and variance which look like this,

00:01:46.064 --> 00:01:50.819
and there's some interesting properties that result from this multiplication.

00:01:50.819 --> 00:01:56.009
Notice that we're taking the measurement and essentially applying it as a correction to

00:01:56.010 --> 00:02:01.760
the initial estimate mu of x. If sigma v is small compared to sigma x,

00:02:01.760 --> 00:02:05.770
that means we have more trust in our measurement than in our initial estimate,

00:02:05.769 --> 00:02:09.564
and that results in a new estimate which is centered very close to the measurement.

00:02:09.564 --> 00:02:15.034
On the other hand, if we trust our prior a lot sigma x is small compared to sigma v,

00:02:15.034 --> 00:02:18.174
then we wind up trusting our prior more than our new measurement,

00:02:18.175 --> 00:02:20.469
and the updated position estimate only gets moved

00:02:20.469 --> 00:02:23.245
slightly in the direction of the measurement.

00:02:23.245 --> 00:02:26.710
And so sigma x and sigma v are

00:02:26.710 --> 00:02:30.805
basically trading off how much we trust one quantity versus another.

00:02:30.805 --> 00:02:35.290
That's a concept that we're going to see a lot throughout this estimation module.

